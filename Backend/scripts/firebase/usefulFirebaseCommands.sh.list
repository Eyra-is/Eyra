# grab all the keys from firebase using shallows
curl -v 'https://YOURFIREBASEAPPHERE.firebaseio.com/.json?shallow=true&auth=YOURCREDENTIALSHERE' > data.json

---

# grab all keys' data from firebase, can run this command in multiple terminals to be faster.
mkdir data
grep -oE "\"-(.*?)\":true" data.json | tr ',' '\n' | sed "s/^\"//g" | sed "s/\":true$//g" | while read line; do
    if [ ! -f 'data/'$line'.json' ]; then
        curl -v 'https://YOURFIREBASEAPPHERE.firebaseio.com/'$line'.json?auth=YOURCREDENTIALSHERE' > 'data/'$line'.json';
    fi
done

---

# compare data with mysql database, and copy all files which do not have a corresponding duplicate in the mysql database to the new folder (run this from within data folder)
# remember to change YOURPASSPHRASE in the command
mkdir ../new
for file in ./*; do echo "just to get nice output from mysql have it in a pipe" | if [ $(mysql -u root -p"YOURPASSHERE" -D "recordings_master" -N -e "select count(*) from recording where filename='$(jq -r '.metadata' "$file" | sed 's/\\"/"/g' | jq -r '.data.speakerInfo.name')_$(jq -r '.metadata' "$file" | sed 's/\\"/"/g' | jq -r '.data.recordingsInfo | keys[0]')';") -eq 0 ]; then cp "$file" "../new/$file"; fi; done

---

# remove duplicates from new folder if needed (quite likely to have a lot of duplicates, unless a script is done to remove them from firebase)
# could also, and might be a better idea, to remove the duplicates from data folder, before moving to new.
cd ../new
reclist=()
for file in ./*; do
    if [ -d "$file" ]; then 
        echo "Skipping directory, $file"
        continue
    fi
    recname=$(jq -r '.metadata' "$file" | sed 's/\\"/"/g' | jq -r '.data.speakerInfo.name')_$(jq -r '.metadata' "$file" | sed 's/\\"/"/g' | jq -r '.data.recordingsInfo | keys[0]')
    echo "$recname"
    if [[ "$recname" == "_" ]]; then
        echo "Recname is _, skipping, file: $file" 
        continue
    fi
    # check if we have already added this recording to our list, in which case, delete the duplicated data.
    inlist=0 # 0 false, 1 true
    for rec in "${reclist[@]}"; do
        if [[ "$rec" == "$recname" ]]; then
            echo "deleting file with duplicate recname.. $recname"
            inlist=1
            rm "$file"
            break
        fi
    done
    if [ $inlist -eq 0 ]; then
        reclist+=($recname)
    fi
done
